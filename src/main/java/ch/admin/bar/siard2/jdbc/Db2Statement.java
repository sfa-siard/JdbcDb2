/*======================================================================
Db2Statement  implements a wrapped DB/2 Statement.
Version     : $Id: $
Application : SIARD2
Description : Db2Statement implements a wrapped DB/2 Statement.
Platform    : Java 7   
------------------------------------------------------------------------
Copyright  : 2016, Enter AG, RÃ¼ti ZH, Switzerland
Created    : 04.11.2016, Hartwig Thomas
======================================================================*/
package ch.admin.bar.siard2.jdbc;

import java.sql.*;
import ch.enterag.utils.jdbc.*;

public class Db2Statement
  extends BaseStatement
  implements Statement
{
  /*------------------------------------------------------------------*/
  /** constructor
   * @param stmtWrapped statement to be wrapped.
   */
  public Db2Statement(Statement stmtWrapped)
    throws SQLException
  {
    super(stmtWrapped);
    setEscapeProcessing(false); /* do not interpret "{" and "}" as JDBC escapes */
  } /* constructor */

  /*------------------------------------------------------------------*/
  /** {@inheritDoc} 
   * Return Db2Connection.
   */
  @Override
  public Connection getConnection() throws SQLException 
  {
    Connection conn = new Db2Connection(super.getConnection());
    return conn;
  } /* getConnection */

  /*------------------------------------------------------------------*/
  /** {@inheritDoc} 
   * Return Db2ResultSet
   */
  @Override
  public ResultSet executeQuery(String sql) throws SQLException 
  {
    ResultSet rs = null;
    rs = new Db2ResultSet(super.executeQuery(getConnection().nativeSQL(sql)));
    return rs;
  } /* executeQuery */

  /*------------------------------------------------------------------*/
  /** {@inheritDoc} 
   * Convert JdbcSQLException from Oracle into
   * SQLFeatureNotSupportedError.
   */
  @Override
  public int executeUpdate(String sql) throws SQLException 
  {
    String sSql = getConnection().nativeSQL(sql);
    int iResult = super.executeUpdate(sSql);
    return iResult;
  } /* executeUpdate */

  /*------------------------------------------------------------------*/
  /** {@inheritDoc} 
   * Convert JdbcSQLException from Oracle into
   * SQLFeatureNotSupportedError.
   */
  @Override
  public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException
  {
    String sSql = getConnection().nativeSQL(sql);
    int iResult = super.executeUpdate(sSql, autoGeneratedKeys);
    return iResult;
  } /* executeUpdate */

  /*------------------------------------------------------------------*/
  /** {@inheritDoc} 
   * Convert JdbcSQLException from Oracle into
   * SQLFeatureNotSupportedError.
   */
  @Override
  public int executeUpdate(String sql, int[] columnIndexes) throws SQLException 
  {
    String sSql = getConnection().nativeSQL(sql);
    int iResult = super.executeUpdate(sSql, columnIndexes);
    return iResult;
  } /* executeUpdate */

  /*------------------------------------------------------------------*/
  /** {@inheritDoc} 
   * Convert JdbcSQLException from Oracle into
   * SQLFeatureNotSupportedError.
   */
  @Override
  public int executeUpdate(String sql, String[] columnNames) throws SQLException 
  {
    String sSql = getConnection().nativeSQL(sql);
    int iResult = super.executeUpdate(sSql, columnNames);
    return iResult;
  } /* executeUpdate */
  
} /* Db2Statement */
